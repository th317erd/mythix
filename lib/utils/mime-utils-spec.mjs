import * as MimeUtils from './mime-utils.mjs';

describe('mime-utils', function() {
  describe('getFilenameExtension', function() {
    it('should be able to get file name extension', function() {
      expect(MimeUtils.getFilenameExtension('/test/derp.txt')).toEqual('txt');
      expect(MimeUtils.getFilenameExtension('/test/derp.test.txt')).toEqual('txt');
      expect(MimeUtils.getFilenameExtension('test.png')).toEqual('png');
      expect(MimeUtils.getFilenameExtension('derp.longext')).toEqual('longext');
    });
  });

  describe('getMimeTypeFromFilename', function() {
    it('should be able to get mime type from file name', function() {
      expect(MimeUtils.getMimeTypeFromFilename('test.3g2')).toEqual('video/3gpp2');
      expect(MimeUtils.getMimeTypeFromFilename('test.3gp')).toEqual('video/3gpp');
      expect(MimeUtils.getMimeTypeFromFilename('test.7z')).toEqual('application/x-7z-compressed');
      expect(MimeUtils.getMimeTypeFromFilename('test.aac')).toEqual('audio/aac');
      expect(MimeUtils.getMimeTypeFromFilename('test.abw')).toEqual('application/x-abiword');
      expect(MimeUtils.getMimeTypeFromFilename('test.arc')).toEqual('application/x-freearc');
      expect(MimeUtils.getMimeTypeFromFilename('test.avi')).toEqual('video/avi');
      expect(MimeUtils.getMimeTypeFromFilename('test.avif')).toEqual('image/avif');
      expect(MimeUtils.getMimeTypeFromFilename('test.azw')).toEqual('application/vnd.amazon.ebook');
      expect(MimeUtils.getMimeTypeFromFilename('test.bin')).toEqual('application/octet-stream');
      expect(MimeUtils.getMimeTypeFromFilename('test.bmp')).toEqual('image/bmp');
      expect(MimeUtils.getMimeTypeFromFilename('test.bz')).toEqual('application/x-bzip');
      expect(MimeUtils.getMimeTypeFromFilename('test.bz2')).toEqual('application/x-bzip2');
      expect(MimeUtils.getMimeTypeFromFilename('test.cda')).toEqual('application/x-cdf');
      expect(MimeUtils.getMimeTypeFromFilename('test.csh')).toEqual('application/x-csh');
      expect(MimeUtils.getMimeTypeFromFilename('test.css')).toEqual('text/css');
      expect(MimeUtils.getMimeTypeFromFilename('test.csv')).toEqual('text/csv');
      expect(MimeUtils.getMimeTypeFromFilename('test.doc')).toEqual('application/msword');
      expect(MimeUtils.getMimeTypeFromFilename('test.docx')).toEqual('application/vnd.openxmlformats-officedocument.wordprocessingml.document');
      expect(MimeUtils.getMimeTypeFromFilename('test.eot')).toEqual('application/vnd.ms-fontobject');
      expect(MimeUtils.getMimeTypeFromFilename('test.epub')).toEqual('application/epub+zip');
      expect(MimeUtils.getMimeTypeFromFilename('test.gif')).toEqual('image/gif');
      expect(MimeUtils.getMimeTypeFromFilename('test.gz')).toEqual('application/gzip');
      expect(MimeUtils.getMimeTypeFromFilename('test.htm')).toEqual('text/html');
      expect(MimeUtils.getMimeTypeFromFilename('test.html')).toEqual('text/html');
      expect(MimeUtils.getMimeTypeFromFilename('test.ico')).toEqual('image/vnd.microsoft.icon');
      expect(MimeUtils.getMimeTypeFromFilename('test.ics')).toEqual('text/calendar');
      expect(MimeUtils.getMimeTypeFromFilename('test.jar')).toEqual('application/java-archive');
      expect(MimeUtils.getMimeTypeFromFilename('test.jpeg')).toEqual('image/jpeg');
      expect(MimeUtils.getMimeTypeFromFilename('test.jpg')).toEqual('image/jpeg');
      expect(MimeUtils.getMimeTypeFromFilename('test.mjs')).toEqual('text/javascript');
      expect(MimeUtils.getMimeTypeFromFilename('test.json')).toEqual('application/json');
      expect(MimeUtils.getMimeTypeFromFilename('test.jsonld')).toEqual('application/ld+json');
      expect(MimeUtils.getMimeTypeFromFilename('test.mid')).toEqual('audio/midi');
      expect(MimeUtils.getMimeTypeFromFilename('test.mjs')).toEqual('text/javascript');
      expect(MimeUtils.getMimeTypeFromFilename('test.mp3')).toEqual('audio/mpeg3');
      expect(MimeUtils.getMimeTypeFromFilename('test.mp4')).toEqual('video/mp4');
      expect(MimeUtils.getMimeTypeFromFilename('test.mpeg')).toEqual('video/mpeg');
      expect(MimeUtils.getMimeTypeFromFilename('test.mpkg')).toEqual('application/vnd.apple.installer+xml');
      expect(MimeUtils.getMimeTypeFromFilename('test.odp')).toEqual('application/vnd.oasis.opendocument.presentation');
      expect(MimeUtils.getMimeTypeFromFilename('test.ods')).toEqual('application/vnd.oasis.opendocument.spreadsheet');
      expect(MimeUtils.getMimeTypeFromFilename('test.odt')).toEqual('application/vnd.oasis.opendocument.text');
      expect(MimeUtils.getMimeTypeFromFilename('test.oga')).toEqual('audio/ogg');
      expect(MimeUtils.getMimeTypeFromFilename('test.ogv')).toEqual('video/ogg');
      expect(MimeUtils.getMimeTypeFromFilename('test.ogx')).toEqual('application/ogg');
      expect(MimeUtils.getMimeTypeFromFilename('test.opus')).toEqual('audio/opus');
      expect(MimeUtils.getMimeTypeFromFilename('test.otf')).toEqual('font/otf');
      expect(MimeUtils.getMimeTypeFromFilename('test.pdf')).toEqual('application/pdf');
      expect(MimeUtils.getMimeTypeFromFilename('test.php')).toEqual('application/x-httpd-php');
      expect(MimeUtils.getMimeTypeFromFilename('test.png')).toEqual('image/png');
      expect(MimeUtils.getMimeTypeFromFilename('test.ppt')).toEqual('application/vnd.ms-powerpoint');
      expect(MimeUtils.getMimeTypeFromFilename('test.pptx')).toEqual('application/vnd.openxmlformats-officedocument.presentationml.presentation');
      expect(MimeUtils.getMimeTypeFromFilename('test.rar')).toEqual('application/vnd.rar');
      expect(MimeUtils.getMimeTypeFromFilename('test.rtf')).toEqual('application/rtf');
      expect(MimeUtils.getMimeTypeFromFilename('test.sh')).toEqual('application/x-sh');
      expect(MimeUtils.getMimeTypeFromFilename('test.svg')).toEqual('image/svg+xml');
      expect(MimeUtils.getMimeTypeFromFilename('test.swf')).toEqual('application/x-shockwave-flash');
      expect(MimeUtils.getMimeTypeFromFilename('test.tar')).toEqual('application/x-tar');
      expect(MimeUtils.getMimeTypeFromFilename('test.tif')).toEqual('image/tiff');
      expect(MimeUtils.getMimeTypeFromFilename('test.tiff')).toEqual('image/tiff');
      expect(MimeUtils.getMimeTypeFromFilename('test.ts')).toEqual('video/mp2t');
      expect(MimeUtils.getMimeTypeFromFilename('test.ttf')).toEqual('font/ttf');
      expect(MimeUtils.getMimeTypeFromFilename('test.txt')).toEqual('text/plain');
      expect(MimeUtils.getMimeTypeFromFilename('test.vsd')).toEqual('application/vnd.visio');
      expect(MimeUtils.getMimeTypeFromFilename('test.wav')).toEqual('audio/wav');
      expect(MimeUtils.getMimeTypeFromFilename('test.weba')).toEqual('audio/webm');
      expect(MimeUtils.getMimeTypeFromFilename('test.webm')).toEqual('video/webm');
      expect(MimeUtils.getMimeTypeFromFilename('test.webp')).toEqual('image/webp');
      expect(MimeUtils.getMimeTypeFromFilename('test.woff')).toEqual('font/woff');
      expect(MimeUtils.getMimeTypeFromFilename('test.woff2')).toEqual('font/woff2');
      expect(MimeUtils.getMimeTypeFromFilename('test.xhtml')).toEqual('application/xhtml+xml');
      expect(MimeUtils.getMimeTypeFromFilename('test.xls')).toEqual('application/vnd.ms-excel');
      expect(MimeUtils.getMimeTypeFromFilename('test.xlsx')).toEqual('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
      expect(MimeUtils.getMimeTypeFromFilename('test.xml')).toEqual('application/xml');
      expect(MimeUtils.getMimeTypeFromFilename('test.xul')).toEqual('application/vnd.mozilla.xul+xml');
      expect(MimeUtils.getMimeTypeFromFilename('test.zip')).toEqual('application/zip');
    });
  });

  describe('getFileExtensionFromMimeType', function() {
    it('should be able to get file extension from mime type', function() {
      expect(MimeUtils.getFileExtensionFromMimeType('video/3gpp2')).toEqual('3g2');
      expect(MimeUtils.getFileExtensionFromMimeType('video/3gpp')).toEqual('3gp');
      expect(MimeUtils.getFileExtensionFromMimeType('application/x-7z-compressed')).toEqual('7z');
      expect(MimeUtils.getFileExtensionFromMimeType('audio/aac')).toEqual('aac');
      expect(MimeUtils.getFileExtensionFromMimeType('application/x-abiword')).toEqual('abw');
      expect(MimeUtils.getFileExtensionFromMimeType('application/x-freearc')).toEqual('arc');
      expect(MimeUtils.getFileExtensionFromMimeType('video/avi')).toEqual('avi');
      expect(MimeUtils.getFileExtensionFromMimeType('image/avif')).toEqual('avif');
      expect(MimeUtils.getFileExtensionFromMimeType('application/vnd.amazon.ebook')).toEqual('azw');
      expect(MimeUtils.getFileExtensionFromMimeType('application/octet-stream')).toEqual('bin');
      expect(MimeUtils.getFileExtensionFromMimeType('image/bmp')).toEqual('bmp');
      expect(MimeUtils.getFileExtensionFromMimeType('application/x-bzip')).toEqual('bz');
      expect(MimeUtils.getFileExtensionFromMimeType('application/x-bzip2')).toEqual('bz2');
      expect(MimeUtils.getFileExtensionFromMimeType('application/x-cdf')).toEqual('cda');
      expect(MimeUtils.getFileExtensionFromMimeType('application/x-csh')).toEqual('csh');
      expect(MimeUtils.getFileExtensionFromMimeType('text/css')).toEqual('css');
      expect(MimeUtils.getFileExtensionFromMimeType('text/csv')).toEqual('csv');
      expect(MimeUtils.getFileExtensionFromMimeType('application/msword')).toEqual('doc');
      expect(MimeUtils.getFileExtensionFromMimeType('application/vnd.openxmlformats-officedocument.wordprocessingml.document')).toEqual('docx');
      expect(MimeUtils.getFileExtensionFromMimeType('application/vnd.ms-fontobject')).toEqual('eot');
      expect(MimeUtils.getFileExtensionFromMimeType('application/epub+zip')).toEqual('epub');
      expect(MimeUtils.getFileExtensionFromMimeType('image/gif')).toEqual('gif');
      expect(MimeUtils.getFileExtensionFromMimeType('application/gzip')).toEqual('gz');
      expect(MimeUtils.getFileExtensionFromMimeType('text/html')).toEqual('html');
      expect(MimeUtils.getFileExtensionFromMimeType('image/vnd.microsoft.icon')).toEqual('ico');
      expect(MimeUtils.getFileExtensionFromMimeType('text/calendar')).toEqual('ics');
      expect(MimeUtils.getFileExtensionFromMimeType('application/java-archive')).toEqual('jar');
      expect(MimeUtils.getFileExtensionFromMimeType('image/jpeg')).toEqual('jpg');
      expect(MimeUtils.getFileExtensionFromMimeType('text/javascript')).toEqual('js');
      expect(MimeUtils.getFileExtensionFromMimeType('application/json')).toEqual('json');
      expect(MimeUtils.getFileExtensionFromMimeType('application/ld+json')).toEqual('jsonld');
      expect(MimeUtils.getFileExtensionFromMimeType('audio/midi')).toEqual('mid');
      expect(MimeUtils.getFileExtensionFromMimeType('text/javascript')).toEqual('js');
      expect(MimeUtils.getFileExtensionFromMimeType('audio/mpeg3')).toEqual('mp3');
      expect(MimeUtils.getFileExtensionFromMimeType('video/mp4')).toEqual('mp4');
      expect(MimeUtils.getFileExtensionFromMimeType('video/mpeg')).toEqual('mpeg');
      expect(MimeUtils.getFileExtensionFromMimeType('application/vnd.apple.installer+xml')).toEqual('mpkg');
      expect(MimeUtils.getFileExtensionFromMimeType('application/vnd.oasis.opendocument.presentation')).toEqual('odp');
      expect(MimeUtils.getFileExtensionFromMimeType('application/vnd.oasis.opendocument.spreadsheet')).toEqual('ods');
      expect(MimeUtils.getFileExtensionFromMimeType('application/vnd.oasis.opendocument.text')).toEqual('odt');
      expect(MimeUtils.getFileExtensionFromMimeType('audio/ogg')).toEqual('oga');
      expect(MimeUtils.getFileExtensionFromMimeType('video/ogg')).toEqual('ogv');
      expect(MimeUtils.getFileExtensionFromMimeType('application/ogg')).toEqual('ogx');
      expect(MimeUtils.getFileExtensionFromMimeType('audio/opus')).toEqual('opus');
      expect(MimeUtils.getFileExtensionFromMimeType('font/otf')).toEqual('otf');
      expect(MimeUtils.getFileExtensionFromMimeType('application/pdf')).toEqual('pdf');
      expect(MimeUtils.getFileExtensionFromMimeType('application/x-httpd-php')).toEqual('php');
      expect(MimeUtils.getFileExtensionFromMimeType('image/png')).toEqual('png');
      expect(MimeUtils.getFileExtensionFromMimeType('application/vnd.ms-powerpoint')).toEqual('ppt');
      expect(MimeUtils.getFileExtensionFromMimeType('application/vnd.openxmlformats-officedocument.presentationml.presentation')).toEqual('pptx');
      expect(MimeUtils.getFileExtensionFromMimeType('application/vnd.rar')).toEqual('rar');
      expect(MimeUtils.getFileExtensionFromMimeType('application/rtf')).toEqual('rtf');
      expect(MimeUtils.getFileExtensionFromMimeType('application/x-sh')).toEqual('sh');
      expect(MimeUtils.getFileExtensionFromMimeType('image/svg+xml')).toEqual('svg');
      expect(MimeUtils.getFileExtensionFromMimeType('application/x-shockwave-flash')).toEqual('swf');
      expect(MimeUtils.getFileExtensionFromMimeType('application/x-tar')).toEqual('tar');
      expect(MimeUtils.getFileExtensionFromMimeType('image/tiff')).toEqual('tiff');
      expect(MimeUtils.getFileExtensionFromMimeType('video/mp2t')).toEqual('ts');
      expect(MimeUtils.getFileExtensionFromMimeType('font/ttf')).toEqual('ttf');
      expect(MimeUtils.getFileExtensionFromMimeType('text/plain')).toEqual('txt');
      expect(MimeUtils.getFileExtensionFromMimeType('application/vnd.visio')).toEqual('vsd');
      expect(MimeUtils.getFileExtensionFromMimeType('audio/wav')).toEqual('wav');
      expect(MimeUtils.getFileExtensionFromMimeType('audio/webm')).toEqual('weba');
      expect(MimeUtils.getFileExtensionFromMimeType('video/webm')).toEqual('webm');
      expect(MimeUtils.getFileExtensionFromMimeType('image/webp')).toEqual('webp');
      expect(MimeUtils.getFileExtensionFromMimeType('font/woff')).toEqual('woff');
      expect(MimeUtils.getFileExtensionFromMimeType('font/woff2')).toEqual('woff2');
      expect(MimeUtils.getFileExtensionFromMimeType('application/xhtml+xml')).toEqual('xhtml');
      expect(MimeUtils.getFileExtensionFromMimeType('application/vnd.ms-excel')).toEqual('xls');
      expect(MimeUtils.getFileExtensionFromMimeType('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')).toEqual('xlsx');
      expect(MimeUtils.getFileExtensionFromMimeType('application/xml')).toEqual('xml');
      expect(MimeUtils.getFileExtensionFromMimeType('application/vnd.mozilla.xul+xml')).toEqual('xul');
      expect(MimeUtils.getFileExtensionFromMimeType('application/zip')).toEqual('zip');
    });
  });
});
